{"ast":null,"code":"var _jsxFileName = \"C:\\\\2019classrevature\\\\project1-app\\\\src\\\\components\\\\Users\\\\userupdate.component.tsx\";\nimport React from 'react';\nexport class UserUpdateComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = async event => {\n      event.preventDefault();\n      console.log('attempting to login');\n      let user = {\n        user_id: this.state.user_Id,\n        user_name: this.state.user_name,\n        password: this.state.password,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        user_role: this.state.user_role\n      };\n\n      try {\n        const resp = await fetch('http://localhost:8081/users/', {\n          method: 'PATCH',\n          credentials: 'include',\n          body: JSON.stringify(user),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        console.log(resp);\n\n        if (resp.status === 401) {\n          this.setState({\n            errorMessage: 'Invalid Credentials'\n          });\n        } else if (resp.status === 200) {\n          // redirect to spaceships page\n          // const user = await resp.json();\n          this.props.history.push('/home');\n        } else {\n          this.setState({\n            errorMessage: 'Cannot Update User'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.updateUserId = event => {\n      this.setState({\n        user_Id: event.target.value\n      });\n    };\n\n    this.updateUsername = event => {\n      this.setState({\n        user_name: event.target.value\n      });\n    };\n\n    this.updatePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.updateFirstName = event => {\n      this.setState({\n        firstname: event.target.value\n      });\n    };\n\n    this.updateLastName = event => {\n      this.setState({\n        lastname: event.target.value\n      });\n    };\n\n    this.updateEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.updateRole = event => {\n      this.setState({\n        user_role: event.target.value\n      });\n    };\n\n    this.state = {\n      input: '',\n      user_Id: 0,\n      user_name: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      user_role: 0,\n      errorMessage: ''\n    };\n  }\n\n  updateInput(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card col-md-4 col-sm-6 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.input,\n      onChange: e => this.updateInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.firstname + ' ' + this.state.lastname)), \"//   \", React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"ID: \", this.state.user_Id), \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Username: \", this.state.user_name), \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Password: \", this.state.password), \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"First Name: \", this.state.firstname), \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Last Name: \", this.state.lastname), \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"email: \", this.state.email), \"//     \", React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Role: \", this.state.user_role), \"//   \"), \"//   \")), React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Update Profile\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"User ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputUserId\",\n      name: \"userId\",\n      className: \"form-control\",\n      placeholder: \"UserId\",\n      required: true,\n      value: this.state.user_Id,\n      onChange: e => this.updateUserId(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputUsername\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      required: true,\n      value: this.state.user_name,\n      onChange: e => {\n        this.updateUsername(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      value: this.state.password,\n      onChange: e => {\n        this.updatePassword(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputFirstName\",\n      name: \"firstName\",\n      className: \"form-control\",\n      placeholder: \"First Name\",\n      required: true,\n      value: this.state.firstname,\n      onChange: e => {\n        this.updateFirstName(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputLastName\",\n      name: \"lastName\",\n      className: \"form-control\",\n      placeholder: \"Last Name\",\n      required: true,\n      value: this.state.lastname,\n      onChange: e => {\n        this.updateLastName(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"iXnputEmail\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"email\",\n      required: true,\n      value: this.state.email,\n      onChange: e => {\n        this.updateEmail(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputRole\",\n      name: \"role\",\n      className: \"form-control\",\n      placeholder: \"Role\",\n      required: true,\n      value: this.state.user_role,\n      onChange: e => {\n        this.updateRole(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"p\", {\n      id: \"login-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.errorMessage)));\n  }\n\n}","map":{"version":3,"sources":["C:\\2019classrevature\\project1-app\\src\\components\\Users\\userupdate.component.tsx"],"names":["React","UserUpdateComponent","Component","constructor","props","submit","event","preventDefault","console","log","user","user_id","state","user_Id","user_name","password","firstname","lastname","email","user_role","resp","fetch","method","credentials","body","JSON","stringify","headers","status","setState","errorMessage","history","push","err","updateUserId","target","value","updateUsername","updatePassword","updateFirstName","updateLastName","updateEmail","updateRole","input","updateInput","e","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { number, string } from 'prop-types';\r\nimport { User } from '../../model/user';\r\nimport { Role } from '../../model/Role';\r\n\r\n\r\ninterface IUserUpdateState {\r\n    input: string;\r\n    user_Id: number;\r\n    user_name: string;\r\n    password: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    email: string;\r\n    user_role : number;\r\n    errorMessage: string;\r\n}\r\n\r\nexport class UserUpdateComponent extends React.Component<any, IUserUpdateState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            user_Id: 0,\r\n            user_name: '',\r\n            password: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n            user_role : 0,\r\n            errorMessage: ''\r\n        };\r\n    }\r\n\r\n    submit = async (event) => {\r\n        event.preventDefault();\r\n        console.log('attempting to login');\r\n        let user = {\r\n            user_id: this.state.user_Id,\r\n            user_name: this.state.user_name,\r\n            password: this.state.password,\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            email: this.state.email,\r\n            user_role: this.state.user_role,\r\n        };\r\n\r\n        try {\r\n            const resp = await fetch('http://localhost:8081/users/', {\r\n                method: 'PATCH',\r\n                credentials: 'include',\r\n                body: JSON.stringify(user),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            })\r\n            console.log(resp);\r\n\r\n            if (resp.status === 401) {\r\n                this.setState({\r\n                    errorMessage: 'Invalid Credentials'\r\n                });\r\n            } else if (resp.status === 200) {\r\n                // redirect to spaceships page\r\n                // const user = await resp.json();\r\n                this.props.history.push('/home');\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Cannot Update User'\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    updateInput(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n        })\r\n    }\r\n    updateUserId = (event) => {\r\n        this.setState({\r\n            user_Id: event.target.value\r\n        });\r\n    }\r\n\r\n    updateUsername = (event) => {\r\n        this.setState({\r\n            user_name: event.target.value\r\n        });\r\n    }\r\n\r\n    updatePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    updateFirstName = (event) => {\r\n        this.setState({\r\n            firstname: event.target.value\r\n        });\r\n    }\r\n\r\n    updateLastName = (event) => {\r\n        this.setState({\r\n            lastname: event.target.value\r\n        });\r\n    }\r\n\r\n    updateEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    updateRole = (event) => {\r\n        this.setState({\r\n            user_role: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n                    return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                  <div className=\"card col-md-4 col-sm-6 col-xs-12\">\r\n                  <input type=\"text\" value={this.state.input} onChange={(e) => this.updateInput(e)}></input><br></br>\r\n           \r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.state.firstname + ' ' + this.state.lastname}</h5>\r\n                  </div>\r\n                //   <ul className=\"list-group list-group-flush\">\r\n                //     <li className=\"list-group-item\">ID: {this.state.user_Id}</li>\r\n                //     <li className=\"list-group-item\">Username: {this.state.user_name}</li>\r\n                //     <li className=\"list-group-item\">Password: {this.state.password}</li>\r\n                //     <li className=\"list-group-item\">First Name: {this.state.firstname}</li>\r\n                //     <li className=\"list-group-item\">Last Name: {this.state.lastname}</li>\r\n                //     <li className=\"list-group-item\">email: {this.state.email}</li>\r\n                //     <li className=\"list-group-item\">Role: {this.state.user_role}</li>\r\n                //   </ul>\r\n                //   </div>\r\n                  </div>\r\n                  <form className=\"form-signin\" onSubmit={this.submit}>\r\n                  <h1 className=\"h3 mb-3 font-weight-normal\">Update Profile</h1>\r\n           \r\n                  <label>User ID</label>\r\n                  <input type=\"text\" id=\"inputUserId\" name=\"userId\"\r\n                    className=\"form-control\" placeholder=\"UserId\"\r\n                    required value={this.state.user_Id} onChange={(e) => this.updateUserId(e)} />\r\n           \r\n                  <label>Username</label>   \r\n                  <input type=\"text\" id=\"inputUsername\" name=\"username\"\r\n                    className=\"form-control\" placeholder=\"Username\"\r\n                    required value={this.state.user_name} onChange = {(e) => {this.updateUsername(e)}}/>\r\n           \r\n                  <label>Password</label>\r\n                  <input type=\"password\" id=\"inputPassword\" name=\"password\"\r\n                    className=\"form-control\" placeholder=\"Password\"\r\n                    required value={this.state.password} onChange= {(e) => {this.updatePassword(e)}} />\r\n           \r\n                  <label>First Name</label>\r\n                  <input type=\"text\" id=\"inputFirstName\" name=\"firstName\"\r\n                    className=\"form-control\" placeholder=\"First Name\"\r\n                    required value={this.state.firstname} onChange= {(e) => {this.updateFirstName(e)}} />\r\n           \r\n                  <label>Last Name</label>\r\n                  <input type=\"text\" id=\"inputLastName\" name=\"lastName\"\r\n                    className=\"form-control\" placeholder=\"Last Name\"\r\n                    required value={this.state.lastname} onChange= {(e) => {this.updateLastName(e)}}/>\r\n           \r\n                  <label>email</label>\r\n                  <input type=\"text\" id=\"iXnputEmail\" name=\"email\"\r\n                    className=\"form-control\" placeholder=\"email\"\r\n                    required value={this.state.email} onChange={(e) => {this.updateEmail(e)}} />\r\n           \r\n                  <label>Role</label>\r\n                  <input type=\"text\" id=\"inputRole\" name=\"role\"\r\n                    className=\"form-control\" placeholder=\"Role\"\r\n                    required value={this.state.user_role} onChange={(e) => {this.updateRole(e)}} />\r\n           \r\n                  <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Update</button>\r\n                  <p id=\"login-error\">{this.state.errorMessage}</p>\r\n                  \r\n                </form>\r\n                </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}