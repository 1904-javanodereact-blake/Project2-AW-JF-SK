{"ast":null,"code":"var _jsxFileName = \"C:\\\\2019classrevature\\\\project2-app\\\\src\\\\components\\\\registration.component.tsx\";\nimport React from 'react';\nexport class RegistrationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = async event => {\n      event.preventDefault();\n      console.log('attempting to Register');\n      const credentials = {\n        user_name: this.state.userName,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email\n      };\n\n      try {\n        console.log(credentials);\n        const resp = await fetch('http://localhost:8080/users', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify({\n            credentials\n          }),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        console.log(resp);\n\n        if (resp.status === 401) {\n          this.setState({\n            errorMessage: 'Invalid Credentials'\n          });\n        } else if (resp.status === 201) {\n          // redirect to spaceships page\n          // const user = await resp.json();\n          const body = await resp.json();\n          updateCurrentUser(body);\n          this.props.history.push('/zillas');\n        } else {\n          this.setState({\n            errorMessage: 'Cannot Register At This Time'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.updateUsername = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.updatePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.updatefirstName = event => {\n      this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    this.updatelastName = event => {\n      this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    this.updateemail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.state = {\n      userName: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email,\n          errorMessage = _this$state.errorMessage;\n    return React.createElement(\"div\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" Please fill out the fields\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"username\",\n      className: \"form-control\",\n      id: \"exampleUsername\",\n      \"aria-describedby\": \"usernameHelp\",\n      placeholder: \"Enter username\",\n      value: userName,\n      onChange: this.updateUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Firstname\"), React.createElement(\"input\", {\n      type: \"firstname\",\n      className: \"form-control\",\n      id: \"exampleFirstname\",\n      \"aria-describedby\": \"firstnameHelp\",\n      placeholder: \"Enter your Firstname\",\n      value: firstName,\n      onChange: this.updatefirstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Lastname\"), React.createElement(\"input\", {\n      type: \"lastname\",\n      className: \"form-control\",\n      id: \"exampleLastname\",\n      \"aria-describedby\": \"lastnameHelp\",\n      placeholder: \"Enter your Lastname\",\n      value: lastName,\n      onChange: this.updatelastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"exampleInputEmail\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter email\",\n      value: email,\n      onChange: this.updateemail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"exampleInputPassword1\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: this.updatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\2019classrevature\\project2-app\\src\\components\\registration.component.tsx"],"names":["React","RegistrationComponent","Component","constructor","props","submit","event","preventDefault","console","log","credentials","user_name","state","userName","password","firstName","lastName","email","resp","fetch","method","body","JSON","stringify","headers","status","setState","errorMessage","json","updateCurrentUser","history","push","err","updateUsername","target","value","updatePassword","updatefirstName","updatelastName","updateemail","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\ninterface ISignInState {\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    errorMessage: string;\r\n}\r\n\r\nexport class RegistrationComponent extends React.Component<any, ISignInState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            errorMessage: ''\r\n        };\r\n    }\r\n\r\n    submit = async (event) => {\r\n        event.preventDefault();\r\n        console.log('attempting to Register');\r\n        const credentials = {\r\n            user_name: this.state.userName,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n        };\r\n\r\n\r\n\r\n        try {\r\n            console.log(credentials);\r\n            const resp = await fetch('http://localhost:8080/users', {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: JSON.stringify({ credentials }),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            })\r\n            console.log(resp);\r\n\r\n            if (resp.status === 401) {\r\n                this.setState({\r\n                    errorMessage: 'Invalid Credentials'\r\n                });\r\n            } else if (resp.status === 201) {\r\n                // redirect to spaceships page\r\n                // const user = await resp.json();\r\n                const body = await resp.json();\r\n                updateCurrentUser(body);\r\n                this.props.history.push('/zillas');\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Cannot Register At This Time'\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateUsername = (event) => {\r\n        this.setState({\r\n            userName: event.target.value\r\n        });\r\n    }\r\n\r\n    updatePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n    updatefirstName = (event) => {\r\n        this.setState({\r\n            firstName: event.target.value\r\n        })\r\n    }\r\n    updatelastName = (event) => {\r\n        this.setState({\r\n            lastName: event.target.value\r\n        })\r\n    }\r\n    updateemail = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { userName, password, firstName, lastName, email, errorMessage } = this.state;\r\n        return (\r\n            <div id=\"form\">\r\n            <form className=\"form-signin\" onSubmit={this.submit}>\r\n            <div className=\"form-group\">\r\n            <h1> Please fill out the fields</h1>\r\n                <label>Username</label>\r\n                <input type=\"username\" className=\"form-control\" id=\"exampleUsername\" \r\n                aria-describedby=\"usernameHelp\" placeholder=\"Enter username\" \r\n                value={userName} onChange={this.updateUsername} ></input>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Firstname</label>\r\n                <input type=\"firstname\" className=\"form-control\" id=\"exampleFirstname\" \r\n                aria-describedby=\"firstnameHelp\" placeholder=\"Enter your Firstname\"\r\n                value={firstName} onChange={this.updatefirstName}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Lastname</label>\r\n                <input type=\"lastname\" className=\"form-control\" id=\"exampleLastname\" \r\n                aria-describedby=\"lastnameHelp\" placeholder=\"Enter your Lastname\"\r\n                value={lastName} onChange={this.updatelastName}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail\" \r\n                aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                value={email} onChange={this.updateemail}></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"\r\n                value={password} onChange={this.updatePassword}></input>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}