{"ast":null,"code":"import _objectSpread from \"C:\\\\2019classrevature\\\\project1-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\2019classrevature\\\\project1-app\\\\src\\\\components\\\\Reimbursements\\\\userupdate.component.tsx\";\nimport React from 'react';\nimport { number, string } from 'prop-types';\nexport class UserUpdateComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = async event => {\n      event.preventDefault();\n      console.log('attempting to login');\n      let user = {\n        user_id: number,\n        user_name: string,\n        password: string,\n        firstname: string,\n        lastname: string,\n        email: string,\n        user_role: undefined\n      };\n\n      try {\n        const resp = await fetch('http://localhost:8081/users/', {\n          method: 'PATCH',\n          credentials: 'include',\n          body: JSON.stringify(user),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        console.log(resp);\n\n        if (resp.status === 401) {\n          this.setState({\n            errorMessage: 'Invalid Credentials'\n          });\n        } else if (resp.status === 200) {\n          // redirect to spaceships page\n          // const user = await resp.json();\n          this.props.history.push('/home');\n        } else {\n          this.setState({\n            errorMessage: 'Cannot Update User'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.updateUserId = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          user_id: event.target.value\n        })\n      });\n    };\n\n    this.updateUsername = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          user_name: event.target.value\n        })\n      });\n    };\n\n    this.updatePassword = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          password: event.target.value\n        })\n      });\n    };\n\n    this.updateFirstName = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          firstname: event.target.value\n        })\n      });\n    };\n\n    this.updateLastName = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          lastname: event.target.value\n        })\n      });\n    };\n\n    this.updateEmail = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          email: event.target.value\n        })\n      });\n    };\n\n    this.updateRoleId = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          roleId: event.target.value\n        })\n      });\n    };\n\n    this.updateRole = event => {\n      this.setState({\n        user: _objectSpread({}, this.state.user, {\n          user_role: event.target.value\n        })\n      });\n    };\n\n    this.state = {\n      user: undefined,\n      input: '',\n      errorMessage: ''\n    };\n  }\n\n  updateInput(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card col-md-4 col-sm-6 col-xs-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.input,\n      onChange: e => this.updateInput(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.newUser,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Search User\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.user.firstName + ' ' + this.state.user.lastName)), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"ID: \", this.state.user.userId), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Username: \", this.state.user.username), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Password: \", this.state.user.password), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"First Name: \", this.state.user.firstName), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Last Name: \", this.state.user.lastName), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"email: \", this.state.user.email), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Role ID: \", this.state.user.roleId), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Role: \", this.state.user.role)))), React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Updatable Profile\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"User ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputUserId\",\n      name: \"userId\",\n      className: \"form-control\",\n      placeholder: \"UserId\",\n      required: true,\n      value: this.state.user.userId,\n      onChange: this.updateUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputUsername\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      required: true,\n      value: this.state.user.username,\n      onChange: this.updateUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      value: this.state.user.password,\n      onChange: this.updatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputFirstName\",\n      name: \"firstName\",\n      className: \"form-control\",\n      placeholder: \"First Name\",\n      required: true,\n      value: this.state.user.firstName,\n      onChange: this.updateFirstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputLastName\",\n      name: \"lastName\",\n      className: \"form-control\",\n      placeholder: \"Last Name\",\n      required: true,\n      value: this.state.user.lastName,\n      onChange: this.updateLastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputEmail\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"email\",\n      required: true,\n      value: this.state.user.email,\n      onChange: this.updateEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Role ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputRoleId\",\n      name: \"roleId\",\n      className: \"form-control\",\n      placeholder: \"Role ID\",\n      required: true,\n      value: this.state.user.roleId,\n      onChange: this.updateRoleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputRole\",\n      name: \"role\",\n      className: \"form-control\",\n      placeholder: \"Role\",\n      required: true,\n      value: this.state.user.role,\n      onChange: this.updateRole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"p\", {\n      id: \"login-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.errorMessage)));\n  }\n\n}","map":{"version":3,"sources":["C:\\2019classrevature\\project1-app\\src\\components\\Reimbursements\\userupdate.component.tsx"],"names":["React","number","string","UserUpdateComponent","Component","constructor","props","submit","event","preventDefault","console","log","user","user_id","user_name","password","firstname","lastname","email","user_role","undefined","resp","fetch","method","credentials","body","JSON","stringify","headers","status","setState","errorMessage","history","push","err","updateUserId","state","target","value","updateUsername","updatePassword","updateFirstName","updateLastName","updateEmail","updateRoleId","roleId","updateRole","input","updateInput","e","render","newUser","firstName","lastName","userId","username","role"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { number, string } from 'prop-types';\r\nimport { User } from '../../model/user';\r\n\r\n\r\ninterface IUserUpdateState {\r\n    user: User;\r\n    input: string;\r\n    errorMessage: string;\r\n}\r\n\r\nexport class UserUpdateComponent extends React.Component<any, any> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: undefined,\r\n            input: '',\r\n            errorMessage: ''\r\n        };\r\n    }\r\n\r\n    submit = async (event) => {\r\n        event.preventDefault();\r\n        console.log('attempting to login');\r\n        let user = {\r\n            user_id: number,\r\n            user_name: string,\r\n            password: string,\r\n            firstname: string,\r\n            lastname: string,\r\n            email: string,\r\n            user_role: undefined\r\n        };\r\n\r\n        try {\r\n            const resp = await fetch('http://localhost:8081/users/', {\r\n                method: 'PATCH',\r\n                credentials: 'include',\r\n                body: JSON.stringify(user),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            })\r\n            console.log(resp);\r\n\r\n            if (resp.status === 401) {\r\n                this.setState({\r\n                    errorMessage: 'Invalid Credentials'\r\n                });\r\n            } else if (resp.status === 200) {\r\n                // redirect to spaceships page\r\n                // const user = await resp.json();\r\n                this.props.history.push('/home');\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Cannot Update User'\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    updateInput(e) {\r\n        this.setState({\r\n                input: e.target.value\r\n            })\r\n    }\r\n    updateUserId = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                user_id: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updateUsername = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                user_name: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePassword = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                password: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updateFirstName = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                firstname: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updateLastName = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                lastname: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updateEmail = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                email: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updateRoleId = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                roleId: event.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    updateRole = (event) => {\r\n        this.setState({\r\n            user: {\r\n                ...this.state.user,\r\n                user_role: event.target.value\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n                    return (\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                  <div className=\"card col-md-4 col-sm-6 col-xs-12\">\r\n                  <input type=\"text\" value={this.state.input} onChange={(e) => this.updateInput(e)}></input><br></br>\r\n                  <button onClick={this.newUser} className=\"btn btn-success\">Search User</button>\r\n           \r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.state.user.firstName + ' ' + this.state.user.lastName}</h5>\r\n                  </div>\r\n                  <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">ID: {this.state.user.userId}</li>\r\n                    <li className=\"list-group-item\">Username: {this.state.user.username}</li>\r\n                    <li className=\"list-group-item\">Password: {this.state.user.password}</li>\r\n                    <li className=\"list-group-item\">First Name: {this.state.user.firstName}</li>\r\n                    <li className=\"list-group-item\">Last Name: {this.state.user.lastName}</li>\r\n                    <li className=\"list-group-item\">email: {this.state.user.email}</li>\r\n                    <li className=\"list-group-item\">Role ID: {this.state.user.roleId}</li>\r\n                    <li className=\"list-group-item\">Role: {this.state.user.role}</li>\r\n                  </ul>\r\n                  </div>\r\n                  </div>\r\n                  <form className=\"form-signin\" onSubmit={this.submit}>\r\n                  <h1 className=\"h3 mb-3 font-weight-normal\">Updatable Profile</h1>\r\n           \r\n                  <label>User ID</label>\r\n                  <input type=\"text\" id=\"inputUserId\" name=\"userId\"\r\n                    className=\"form-control\" placeholder=\"UserId\"\r\n                    required value={this.state.user.userId} onChange={this.updateUserId} />\r\n           \r\n                  <label>Username</label>\r\n                  <input type=\"text\" id=\"inputUsername\" name=\"username\"\r\n                    className=\"form-control\" placeholder=\"Username\"\r\n                    required value={this.state.user.username} onChange={this.updateUsername} />\r\n           \r\n                  <label>Password</label>\r\n                  <input type=\"password\" id=\"inputPassword\" name=\"password\"\r\n                    className=\"form-control\" placeholder=\"Password\"\r\n                    required value={this.state.user.password} onChange={this.updatePassword} />\r\n           \r\n                  <label>First Name</label>\r\n                  <input type=\"text\" id=\"inputFirstName\" name=\"firstName\"\r\n                    className=\"form-control\" placeholder=\"First Name\"\r\n                    required value={this.state.user.firstName} onChange={this.updateFirstName} />\r\n           \r\n                  <label>Last Name</label>\r\n                  <input type=\"text\" id=\"inputLastName\" name=\"lastName\"\r\n                    className=\"form-control\" placeholder=\"Last Name\"\r\n                    required value={this.state.user.lastName} onChange={this.updateLastName} />\r\n           \r\n                  <label>email</label>\r\n                  <input type=\"text\" id=\"inputEmail\" name=\"email\"\r\n                    className=\"form-control\" placeholder=\"email\"\r\n                    required value={this.state.user.email} onChange={this.updateEmail} />\r\n           \r\n                  <label>Role ID</label>\r\n                  <input type=\"text\" id=\"inputRoleId\" name=\"roleId\"\r\n                    className=\"form-control\" placeholder=\"Role ID\"\r\n                    required value={this.state.user.roleId} onChange={this.updateRoleId} />\r\n           \r\n                  <label>Role</label>\r\n                  <input type=\"text\" id=\"inputRole\" name=\"role\"\r\n                    className=\"form-control\" placeholder=\"Role\"\r\n                    required value={this.state.user.role} onChange={this.updateRole} />\r\n           \r\n                  <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Update</button>\r\n                  <p id=\"login-error\">{this.state.errorMessage}</p>\r\n                </form>\r\n                </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}