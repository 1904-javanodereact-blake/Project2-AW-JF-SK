{"ast":null,"code":"var _jsxFileName = \"C:\\\\2019classrevature\\\\project2-app\\\\src\\\\components\\\\UserProfiles\\\\userbyusername.component.tsx\";\nimport React from 'react';\nimport { UserCardComponent } from './usercard.component';\nimport { user$ } from '../../streams/user-stream';\nexport class UserIdComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateUserID = void 0;\n\n    this.getId = async id => {\n      const resp = await fetch('http://localhost:8080/users/' + id, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      console.log('Not Allowed');\n      const body = await resp.json();\n      this.setState({\n        users: body\n      });\n    };\n\n    this.updateUserId = event => {\n      this.setState({\n        user_id: event.target.value\n      });\n    };\n\n    this.state = {\n      users: undefined,\n      user_id: 0\n    };\n  }\n\n  componentDidMount() {\n    const userSub = user$.subscribe(user => {\n      this.setState({\n        user: user\n      });\n    });\n    this.setState({\n      userSubscription: userSub\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.userSubscription && this.state.userSubscription.unsubscribe();\n  } // in here we should initialize http calls\n\n\n  render() {\n    const user_id = this.state.user_id;\n    const myUser = this.state.users;\n    const currUser = this.state.user;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"center-cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, currUser && React.createElement(UserCardComponent, {\n      user: currUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\2019classrevature\\project2-app\\src\\components\\UserProfiles\\userbyusername.component.tsx"],"names":["React","UserCardComponent","user$","UserIdComponent","Component","constructor","props","updateUserID","getId","id","resp","fetch","method","credentials","console","log","body","json","setState","users","updateUserId","event","user_id","target","value","state","undefined","componentDidMount","userSub","subscribe","user","userSubscription","componentWillUnmount","unsubscribe","render","myUser","currUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAGA,SAASC,KAAT,QAAsB,2BAAtB;AASA,OAAO,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA2D;AAGhEC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AADsB,SAFtBC,YAEsB;;AAAA,SAyBvBC,KAzBuB,GAyBf,MAAOC,EAAP,IAAqB;AAE5B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiCF,EAAlC,EAAsC;AAAEG,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAAtC,CAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,IAAL,EAAnB;AAEG,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEH;AADK,OAAd;AAIJ,KAnCuB;;AAAA,SAqCxBI,YArCwB,GAqCRC,KAAD,IAAW;AACtB,WAAKH,QAAL,CAAc;AACVI,QAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaC;AADZ,OAAd;AAIH,KA1CuB;;AAEtB,SAAKC,KAAL,GAAa;AACbN,MAAAA,KAAK,EAAEO,SADM;AAEbJ,MAAAA,OAAO,EAAE;AAFI,KAAb;AAID;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,OAAO,GAAG1B,KAAK,CAAC2B,SAAN,CAAiBC,IAAD,IAAU;AACxC,WAAKZ,QAAL,CAAc;AACZY,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KAJe,CAAhB;AAMA,SAAKZ,QAAL,CAAc;AACZa,MAAAA,gBAAgB,EAAEH;AADN,KAAd;AAGD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrB,SAAKP,KAAL,CAAWM,gBAAX,IAA+B,KAAKN,KAAL,CAAWM,gBAAX,CAA4BE,WAA5B,EAA/B;AACD,GAzB+D,CA2BhE;;;AAoBAC,EAAAA,MAAM,GAAG;AAAA,UACEZ,OADF,GACa,KAAKG,KADlB,CACEH,OADF;AAEL,UAAMa,MAAM,GAAG,KAAKV,KAAL,CAAWN,KAA1B;AACA,UAAMiB,QAAQ,GAAG,KAAKX,KAAL,CAAWK,IAA5B;AACF,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,QAAQ,IAAI,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAGA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,CADF,CADF;AAOD;;AA1D+D","sourcesContent":["import React from 'react';\r\nimport { UserCardComponent } from './usercard.component';\r\nimport { User } from '../../model/user';\r\nimport { Subscription } from 'rxjs';\r\nimport { user$ } from '../../streams/user-stream';\r\n\r\ninterface IState {\r\n  users : any;\r\n  user_id: number;\r\n  user?: User,\r\n  userSubscription?: Subscription\r\n}\r\n\r\nexport class UserIdComponent extends React.Component<any, IState> {\r\n    updateUserID: any;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    users: undefined,\r\n    user_id: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userSub = user$.subscribe((user) => {\r\n      this.setState({\r\n        user: user\r\n      })\r\n    });\r\n\r\n    this.setState({\r\n      userSubscription: userSub\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.userSubscription && this.state.userSubscription.unsubscribe();\r\n  }\r\n\r\n  // in here we should initialize http calls\r\n   getId = async (id:number) => {\r\n      \r\n    const resp = await fetch('http://localhost:8080/users/' + id, { method: 'GET', credentials: 'include' });\r\n    console.log('Not Allowed');   \r\n    const body = await resp.json();\r\n       \r\n       this.setState({\r\n         users: body\r\n        \r\n        })\r\n  }\r\n  \r\n  updateUserId = (event) => {\r\n      this.setState({\r\n          user_id: event.target.value\r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n      const {user_id} = this.state;\r\n      const myUser = this.state.users;\r\n      const currUser = this.state.user;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"center-cards\"> \r\n            {currUser && <UserCardComponent user ={currUser}/>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}