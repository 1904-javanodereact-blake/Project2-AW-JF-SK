{"ast":null,"code":"var _jsxFileName = \"C:\\\\2019classrevature\\\\project1-app\\\\src\\\\components\\\\Reimbursements\\\\reimbursementupdate.component.tsx\";\nimport React from 'react';\nexport class ReimbursementUpdateComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = async event => {\n      event.preventDefault();\n      console.log('attempting to update reimbursement');\n      let user = {\n        reimbursementId: this.state.reimbursementId,\n        amount: this.state.amount,\n        date_Submitted: this.state.date_Submitted,\n        date_Resolved: this.state.date_Resolved,\n        description: this.state.description,\n        status: this.state.status\n      };\n\n      try {\n        const resp = await fetch('http://localhost:8081/reimbursements/', {\n          method: 'PATCH',\n          credentials: 'include',\n          body: JSON.stringify(user),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        console.log(resp);\n\n        if (resp.status === 401) {\n          this.setState({\n            errorMessage: 'Invalid Credentials'\n          });\n        } else if (resp.status === 200) {\n          // redirect to spaceships page\n          // const user = await resp.json();\n          this.props.history.push('/home');\n        } else {\n          this.setState({\n            errorMessage: 'Cannot Update User'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.updateAmount = event => {\n      this.setState({\n        amount: event.target.value\n      });\n    };\n\n    this.updateDateSubmitted = event => {\n      this.setState({\n        date_Submitted: event.target.value\n      });\n    };\n\n    this.updateDateResolved = event => {\n      this.setState({\n        date_Resolved: event.target.value\n      });\n    };\n\n    this.updateDescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.updateStatus = event => {\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.updateType = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.state = {\n      reimbursementId: 0,\n      amount: 0,\n      date_Submitted: '',\n      date_Resolved: 0,\n      description: '',\n      status: 0,\n      errorMessage: ''\n    };\n  }\n\n  updateReimbursementId(e) {\n    this.setState({\n      reimbursementId: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Update Reimbursement\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"ReimbursementId\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reimbursementId\",\n      name: \"reimbursementid\",\n      className: \"form-control\",\n      placeholder: \"reimbursementId\",\n      required: true,\n      value: this.state.reimbursementId,\n      onChange: e => this.updateReimbursementId(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Author\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      name: \"Author\",\n      className: \"form-control\",\n      placeholder: \"author\",\n      required: true,\n      value: this.state.author,\n      onChange: e => {\n        this.updateAuthor(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"amount\",\n      name: \"amount\",\n      className: \"form-control\",\n      placeholder: \"amount\",\n      required: true,\n      value: this.state.amount,\n      onChange: e => {\n        this.updateAmount(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Date Submitted\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"date-submitted\",\n      name: \"Date-submitted\",\n      className: \"form-control\",\n      placeholder: \"datesubmitted\",\n      required: true,\n      value: this.state.date_Submitted,\n      onChange: e => {\n        this.updateDateSubmitted(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Date Resolved\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"date-resolved\",\n      name: \"Date-resolved\",\n      className: \"form-control\",\n      placeholder: \"dateresolved\",\n      required: true,\n      value: this.state.date_Resolved,\n      onChange: e => {\n        this.updateDateResolved(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      className: \"form-control\",\n      placeholder: \"description\",\n      required: true,\n      value: this.state.description,\n      onChange: e => {\n        this.updateDescription(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Resolver\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"resolver\",\n      name: \"resolver\",\n      className: \"form-control\",\n      placeholder: \"resolver\",\n      required: true,\n      value: this.state.resolver,\n      onChange: e => {\n        this.updateResolver(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"status\",\n      name: \"status\",\n      className: \"form-control\",\n      placeholder: \"status\",\n      required: true,\n      value: this.state.status,\n      onChange: e => {\n        this.updateStatus(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"type\",\n      name: \"type\",\n      className: \"form-control\",\n      placeholder: \"type\",\n      required: true,\n      value: this.state.type,\n      onChange: e => {\n        this.updateType(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"p\", {\n      id: \"login-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.errorMessage));\n  }\n\n}","map":{"version":3,"sources":["C:\\2019classrevature\\project1-app\\src\\components\\Reimbursements\\reimbursementupdate.component.tsx"],"names":["React","ReimbursementUpdateComponent","Component","constructor","props","submit","event","preventDefault","console","log","user","reimbursementId","state","amount","date_Submitted","date_Resolved","description","status","resp","fetch","method","credentials","body","JSON","stringify","headers","setState","errorMessage","history","push","err","updateAmount","target","value","updateDateSubmitted","updateDateResolved","updateDescription","updateStatus","updateType","type","updateReimbursementId","e","render","author","updateAuthor","resolver","updateResolver"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { number, string } from 'prop-types';\r\nimport { User } from '../../model/user';\r\nimport { Role } from '../../model/Role';\r\n\r\n\r\ninterface IReimbursementUpdateState {\r\n    reimbursementId: number;  \r\n    amount: number;  \r\n    date_Submitted: string; \r\n    date_Resolved: number;\r\n    description: string; \r\n    status: number; \r\n    errorMessage: string\r\n}\r\n\r\nexport class ReimbursementUpdateComponent extends React.Component<any, IReimbursementUpdateState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reimbursementId: 0,\r\n            amount: 0,\r\n            date_Submitted: '',\r\n            date_Resolved: 0,\r\n            description: '',\r\n            status : 0,\r\n            errorMessage: ''\r\n        };\r\n    }\r\n\r\n    submit = async (event) => {\r\n        event.preventDefault();\r\n        console.log('attempting to update reimbursement');\r\n        let user = {\r\n            reimbursementId: this.state.reimbursementId,\r\n            amount: this.state.amount,\r\n            date_Submitted: this.state.date_Submitted,\r\n            date_Resolved: this.state.date_Resolved,\r\n            description: this.state.description,\r\n            status: this.state.status,\r\n        };\r\n\r\n        try {\r\n            const resp = await fetch('http://localhost:8081/reimbursements/', {\r\n                method: 'PATCH',\r\n                credentials: 'include',\r\n                body: JSON.stringify(user),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            })\r\n            console.log(resp);\r\n\r\n            if (resp.status === 401) {\r\n                this.setState({\r\n                    errorMessage: 'Invalid Credentials'\r\n                });\r\n            } else if (resp.status === 200) {\r\n                // redirect to spaceships page\r\n                // const user = await resp.json();\r\n                this.props.history.push('/home');\r\n            } else {\r\n                this.setState({\r\n                    errorMessage: 'Cannot Update User'\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    updateReimbursementId(e) {\r\n        this.setState({\r\n            reimbursementId: e.target.value\r\n        })\r\n    }\r\n    updateAmount = (event) => {\r\n        this.setState({\r\n            amount: event.target.value\r\n        });\r\n    }\r\n\r\n    updateDateSubmitted = (event) => {\r\n        this.setState({\r\n            date_Submitted: event.target.value\r\n        });\r\n    }\r\n\r\n    updateDateResolved = (event) => {\r\n        this.setState({\r\n            date_Resolved: event.target.value\r\n        });\r\n    }\r\n\r\n    updateDescription = (event) => {\r\n        this.setState({\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    updateStatus = (event) => {\r\n        this.setState({\r\n            status: event.target.value\r\n        });\r\n    }\r\n    updateType = (event) => {\r\n        this.setState({\r\n            type: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n                    return (\r\n                  <form className=\"form-signin\" onSubmit={this.submit}>\r\n                  <h1 className=\"h3 mb-3 font-weight-normal\">Update Reimbursement</h1>\r\n           \r\n                  <label>ReimbursementId</label>\r\n                  <input type=\"text\" id=\"reimbursementId\" name=\"reimbursementid\"\r\n                    className=\"form-control\" placeholder=\"reimbursementId\"\r\n                    required value={this.state.reimbursementId} onChange={(e) => this.updateReimbursementId(e)} />\r\n           \r\n                  <label>Author</label>   \r\n                  <input type=\"text\" id=\"author\" name=\"Author\"\r\n                    className=\"form-control\" placeholder=\"author\"\r\n                    required value={this.state.author} onChange = {(e) => {this.updateAuthor(e)}}/>\r\n           \r\n                  <label>Amount</label>\r\n                  <input type=\"text\" id=\"amount\" name=\"amount\"\r\n                    className=\"form-control\" placeholder=\"amount\"\r\n                    required value={this.state.amount} onChange= {(e) => {this.updateAmount(e)}} />\r\n           \r\n                  <label>Date Submitted</label>\r\n                  <input type=\"text\" id=\"date-submitted\" name=\"Date-submitted\"\r\n                    className=\"form-control\" placeholder=\"datesubmitted\"\r\n                    required value={this.state.date_Submitted} onChange= {(e) => {this.updateDateSubmitted(e)}} />\r\n           \r\n                  <label>Date Resolved</label>\r\n                  <input type=\"text\" id=\"date-resolved\" name=\"Date-resolved\"\r\n                    className=\"form-control\" placeholder=\"dateresolved\"\r\n                    required value={this.state.date_Resolved} onChange= {(e) => {this.updateDateResolved(e)}}/>\r\n           \r\n                  <label>Description</label>\r\n                  <input type=\"text\" id=\"description\" name=\"description\"\r\n                    className=\"form-control\" placeholder=\"description\"\r\n                    required value={this.state.description} onChange={(e) => {this.updateDescription(e)}} />\r\n           \r\n                  <label>Resolver</label>\r\n                  <input type=\"text\" id=\"resolver\" name=\"resolver\"\r\n                    className=\"form-control\" placeholder=\"resolver\"\r\n                    required value={this.state.resolver} onChange={(e) => {this.updateResolver(e)}} />\r\n\r\n                    \r\n                  <label>Status</label>\r\n                  <input type=\"text\" id=\"status\" name=\"status\"\r\n                    className=\"form-control\" placeholder=\"status\"\r\n                    required value={this.state.status} onChange={(e) => {this.updateStatus(e)}} />\r\n                    \r\n                  <label>Type</label>\r\n                  <input type=\"text\" id=\"type\" name=\"type\"\r\n                    className=\"form-control\" placeholder=\"type\"\r\n                    required value={this.state.type} onChange={(e) => {this.updateType(e)}} />\r\n           \r\n                  <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Update</button>\r\n                  <p id=\"login-error\">{this.state.errorMessage}</p>\r\n                  \r\n                </form>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}