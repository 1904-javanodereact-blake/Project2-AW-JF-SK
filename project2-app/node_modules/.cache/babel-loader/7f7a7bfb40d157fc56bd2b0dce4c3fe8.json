{"ast":null,"code":"var _jsxFileName = \"C:\\\\2019classrevature\\\\project1-app\\\\src\\\\components\\\\sign-in\\\\sign-in.component.tsx\";\nimport React from 'react';\nexport class SignInComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = async event => {\n      event.preventDefault();\n      console.log('attempting to login');\n      const credentials = {\n        user_name: this.state.userName,\n        password: this.state.password\n      };\n      const userName = this.state.userName;\n      const password = this.state.password;\n\n      try {\n        console.log(credentials);\n        const resp = await fetch('http://localhost:8080/login', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify({\n            userName,\n            password\n          }),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        console.log(resp);\n\n        if (resp.status === 401) {\n          this.setState({\n            errorMessage: 'Invalid Credentials'\n          });\n        } else if (resp.status === 200) {\n          // redirect to spaceships page\n          // const user = await resp.json();\n          this.props.history.push('/home');\n        } else {\n          this.setState({\n            errorMessage: 'Cannot Login At This Time'\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.updateUsername = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.updatePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.state = {\n      userName: '',\n      password: '',\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password,\n          errorMessage = _this$state.errorMessage;\n    return React.createElement(\"div\", {\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-signin\",\n      onSubmit: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"top\",\n      className: \"h3 mb-3 font-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"label\", {\n      htmlFor: \"inputUsername\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputUsername\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      required: true,\n      value: userName,\n      onChange: this.updateUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"inputPassword\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      value: password,\n      onChange: this.updatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"but\",\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"p\", {\n      id: \"login-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, errorMessage)));\n  }\n\n}","map":{"version":3,"sources":["C:\\2019classrevature\\project1-app\\src\\components\\sign-in\\sign-in.component.tsx"],"names":["React","SignInComponent","Component","constructor","props","submit","event","preventDefault","console","log","credentials","user_name","state","userName","password","resp","fetch","method","body","JSON","stringify","headers","status","setState","errorMessage","history","push","err","updateUsername","target","value","updatePassword","render"],"mappings":"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","sourcesContent":["  import React from 'react';\r\n\r\ninterface ISignInState {\r\n  userName: string;\r\n  password: string;\r\n  errorMessage: string;\r\n}\r\n\r\nexport class SignInComponent extends React.Component<any, ISignInState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    };\r\n  }\r\n\r\n  submit = async (event) => {\r\n    event.preventDefault();\r\n    console.log('attempting to login');\r\n    const credentials = {\r\n      user_name: this.state.userName,\r\n      password: this.state.password\r\n    };\r\n\r\n    const userName = this.state.userName;\r\n    const password = this.state.password;\r\n\r\n    try {\r\n      console.log(credentials);\r\n      const resp = await fetch('http://localhost:8080/login', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        body: JSON.stringify({userName,password}),\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      })\r\n      console.log(resp);\r\n\r\n      if (resp.status === 401) {\r\n        this.setState({\r\n          errorMessage: 'Invalid Credentials'\r\n        });\r\n      } else if (resp.status === 200) {\r\n        // redirect to spaceships page\r\n        // const user = await resp.json();\r\n        this.props.history.push('/home');\r\n      } else {\r\n        this.setState({\r\n          errorMessage: 'Cannot Login At This Time'\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  updateUsername = (event) => {\r\n    this.setState({\r\n      userName: event.target.value\r\n    });\r\n  }\r\n\r\n  updatePassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { userName, password, errorMessage } = this.state;\r\n    return (\r\n      <div id = \"form\">\r\n      <form className=\"form-signin\" onSubmit={this.submit}>\r\n        <h1 id = \"top\" className=\"h3 mb-3 font-weight-normal\">Sign In</h1>\r\n        <label htmlFor=\"inputUsername\" className=\"sr-only\">Username</label>\r\n        <input type=\"text\" id=\"inputUsername\" name=\"username\"\r\n          className=\"form-control\" placeholder=\"Username\"\r\n          required value={userName} onChange={this.updateUsername} />\r\n\r\n        <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"inputPassword\" name=\"password\"\r\n          className=\"form-control\" placeholder=\"Password\"\r\n          required value={password} onChange={this.updatePassword} />\r\n\r\n        <button id = \"but\" className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n        <p id=\"login-error\">{errorMessage}</p>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}